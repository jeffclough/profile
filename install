#!/bin/zsh

# Output the canonical, no-symlinks path to the given filename or directory.
# usage: realpath FILENAME
realpath() {
  python <<EOF
import os.path
print os.path.realpath("$1")
EOF
}

# Insist that the given commands are on the PATH.
# usage: require COMMAND ...
require() {
  while [[ -n "$1" ]]; do
    if ! which $1 &>/dev/null; then
      echo "$1 command not found. Aborting installation."
      exit
    fi
    shift
  done
}

# Insist that the ts command be available.
export PATH=$HOME/my/bin:$PATH
require ts

# Install the given script as a symlink.
# usage: install_link SCRIPT_FILE
install_link() {
  homefile="$(realpath "$HOME/$1")"
  homefile="${homefile#$HOME/}"
  target="$instpath/$1"
  target="${target#$HOME/}"
  # If this file is already installed, there's nothing to do.
  if [[ "$homefile" == "$target" ]]; then
    return
  fi

  # Timestamp any existing version of this script.
  ts "$homefile" 2>/dev/null

  # Create a symlink of this script in the home directory.
  ln "-s" "$target" "$homefile"
}

# Get the actual directory this script is running from.
instpath="$(dirname "$(realpath "$0")")"

# Make sure we're working from the home directory, and restore cwd on exit.
cd
trap 'cd -' INT TERM EXIT

# Install symlinks to our new profile scripts.
install_link .zprofile
install_link .zshenv
install_link .zshrc
install_link .vimrc
echo "Installed!"
